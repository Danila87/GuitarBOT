from itertools import count
import re
import sqlite3
import telebot
from telebot import types
import time
import requests
from bs4 import BeautifulSoup
import random
import time

token = "5371019683:AAGM6VbDWxOijJqyVLfPoox7JdlCxjsMNpU"
bot = telebot.TeleBot(token)
conn = sqlite3.connect('database.db', check_same_thread=False)
cursor = conn.cursor()
cotik = open('img\cotik.jpg', 'rb')




#–†–ê–ó–õ–ò–ß–ù–´–ï –ú–ï–ù–Æ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô

#–ê–¥–º–∏–Ω –º–µ–Ω—é
def keyboard_admin(message):
    Keyboard = types.ReplyKeyboardMarkup(row_width = 1, resize_keyboard=True)
    btn2 = types.KeyboardButton(text = "–°–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω")
    btn3 = types.KeyboardButton(text = "–û—Ç–∑—ã–≤—ã")
    btn5 = types.KeyboardButton(text = "–í—ã–≤–µ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å—ã")
    btn6 = types.KeyboardButton(text = "–°–æ–±—ã—Ç–∏—è")
    btn8 = types.KeyboardButton(text = "–ü–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
    btn1 = types.KeyboardButton(text = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    Keyboard.add(btn2, btn3, btn5, btn6, btn8 ,btn1)
    time.sleep(1)
    bot.send_message(message.chat.id, "–û—Ç–∫—Ä—ã–≤–∞—é –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup = Keyboard)

#–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –º–µ–Ω—é 
def keyboard_user(message):
    Keyboard = types.ReplyKeyboardMarkup(row_width = 1, resize_keyboard=True)
    btn2 = types.KeyboardButton(text = "–°–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω")
    btn3 = types.KeyboardButton(text = "–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
    btn4 = types.KeyboardButton(text = "–°–æ–±—ã—Ç–∏—è")
    btn1 = types.KeyboardButton(text = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    Keyboard.add(btn2, btn3, btn4, btn1)
    bot.send_message(message.chat.id, "–û—Ç–∫—Ä—ã–≤–∞—é –º–µ–Ω—é", reply_markup = Keyboard)

#–î–∞/–ù–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def keyboard_yes_no(message):
    keyboard = types.ReplyKeyboardMarkup(row_width = 1, resize_keyboard=True)
    btn1 = types.KeyboardButton(text = "–î–∞")
    btn2 = types.KeyboardButton(text = "–ù–µ—Ç")
    keyboard.add(btn1, btn2)
    return keyboard

#–ü–æ–¥–º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
def keyboard_setting_submenu(message, text):
    rows = db_user_select_by_id(id_user = message.from_user.id)
    keyboard = types.ReplyKeyboardMarkup(row_width = 1, resize_keyboard = True)
    btn1 = types.KeyboardButton(text = "–ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –¥–∞–Ω–Ω—ã–µ")
    btn5 = types.KeyboardButton(text = "–ü–µ—Å–µ–Ω–Ω–∏–∫–∏")
    btn4 = types.KeyboardButton(text = "–ù–∞–∑–∞–¥")
    if rows[4] == 0:
        btn2 = types.KeyboardButton(text = "–ü–æ–¥–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É")
    else:
        btn2 = types.KeyboardButton(text = "–û—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É")
    if rows[6] == 1:
        btn3 = types.KeyboardButton(text = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã")
        keyboard.add(btn1, btn2, btn3, btn5, btn4)
        bot.send_message(message.chat.id, text, reply_markup = keyboard)
    else:
        keyboard.add(btn1, btn2, btn5, btn4)
        bot.send_message(message.chat.id, text, reply_markup = keyboard)

#–ü–æ–¥–º–µ–Ω—é "–°–æ–±—ã—Ç–∏—è"
def keyboard_event_submenu(message):
    rows = db_user_select_by_id(id_user = message.from_user.id)
    keyboard = types.ReplyKeyboardMarkup(row_width = 1, resize_keyboard=True)
    btn1 = types.KeyboardButton(text = "–ü–æ–∫–∞–∑–∞—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è")
    btn3 = types.KeyboardButton(text = "–ù–∞–∑–∞–¥")
    if rows[6] == 1 or rows[6] == 2:
        btn2 = types.KeyboardButton(text = "–°–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ")
        keyboard.add(btn1, btn2, btn3)
        bot.send_message(message.chat.id, "–û—Ç–∫—Ä—ã–≤–∞—é", reply_markup = keyboard)
    else:
        keyboard.add(btn1, btn3)
        bot.send_message(message.chat.id, "–û—Ç–∫—Ä—ã–≤–∞—é", reply_markup = keyboard)

#–ü–æ–¥–º–µ–Ω—é "–û—Ç–∑—ã–≤—ã"
def keyboard_review_submenu(message):

    rows = db_user_select_by_id(id_user = message.from_user.id)

    if rows[6] == 1 or rows[6] == 2:
        rows = db_user_select_by_id(id_user = message.from_user.id)
        keyboard = types.ReplyKeyboardMarkup(row_width = 1, resize_keyboard = True)
        btn1 = types.KeyboardButton(text = "–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–∑—ã–≤—ã")
        btn2 = types.KeyboardButton(text = "–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
        btn3 = types.KeyboardButton(text = "–ù–∞–∑–∞–¥")
        keyboard.add(btn1, btn2, btn3)
        bot.send_message(message.chat.id, "–û—Ç–∫—Ä—ã–≤–∞—é", reply_markup = keyboard)
    else:
        error(message = message)

#–ü–æ–¥–º–µ–Ω—é "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã"
def keyboard_admin_edit_submenu(message):

    rows = db_user_select_by_id(id_user = message.from_user.id)

    if rows[6] == 1:
        keyboard = types.ReplyKeyboardMarkup(row_width = 1, resize_keyboard = True)
        btn1 = types.KeyboardButton(text = "–ù–∞–∑–∞–¥")
        btn2 = types.KeyboardButton(text = "–ù–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
        btn3 = types.KeyboardButton(text = "–£–±—Ä–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        btn4 = types.KeyboardButton(text = "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
        keyboard.add(btn2, btn3, btn4, btn1)
        bot.send_message(message.chat.id, "–û—Ç–∫—Ä—ã–≤–∞—é", reply_markup = keyboard)
    else:
        error(message = message)

#–ö–Ω–æ–ø–∫–∞ —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ 
def administrator_call(message):

    keyboard = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", url='https://t.me/Danila877')
    keyboard.add(btn1)
    bot.send_message(message.chat.id, "üëá", reply_markup = keyboard)

#–§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–´ –° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò

#–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def db_all_users():
    cursor.execute("SELECT * FROM Users LEFT OUTER JOIN Role ON Users.Id_role = Role.Id_role")
    rows = cursor.fetchall()
    return rows

#–í—Å–µ –∞–π–¥–∏ —á–∞—Ç—ã —Å–æ–≥–ª–∞—Å–Ω—ã–µ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É
def db_user_select():
    cursor.execute("SELECT id_user FROM Users WHERE Event_status = 1")
    rows = cursor.fetchall()
    return rows

#–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –ø–æ –∞–π–¥–∏
def db_user_select_by_id(id_user:int):
    cursor.execute("SELECT * FROM Users LEFT OUTER JOIN Role ON Users.Id_role = Role.Id_role WHERE id_user = ?", (id_user,))
    rows = cursor.fetchone()
    return rows

#–í–Ω–µ—Å–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
def db_user_insert(id_user: int, first_name: str, last_name:str, nickname: str, event_status: int):
    cursor.execute('INSERT INTO Users (id_user, First_name, Last_name, Nickname, Event_status, Id_role) VALUES (?,?,?,?,?,3)', (id_user, first_name, last_name, nickname, event_status))
    conn.commit()

#–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def db_user_registration_select(id_user: int):
    cursor.execute('SELECT * FROM Users WHERE id_user = ?', (id_user,))
    rows = cursor.fetchall()
    row = len(rows)
    return row

#–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def db_user_newsletter_edit(status: int, id_user: int):
    cursor.execute("UPDATE Users SET Event_status = ? WHERE id_user = ?", (status, id_user))
    conn.commit()

#–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
def db_user_upgrade(id_user:int, status):
    cursor.execute("UPDATE Users SET Id_role = ? WHERE id_user = ?", (status, id_user))
    conn.commit()

def db_all_admin_select():
    cursor.execute("SELECT * FROM Users LEFT OUTER JOIN Role ON Users.Id_role = Role.Id_role WHERE Users.Id_role = 2")
    rows = cursor.fetchall()
    return rows
    
#–í–°–ï –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–´ –° –û–¢–ó–´–í–ê–ú–ò

#–í—Å—Ç–∞–≤–∫–∞ –æ—Ç–∑—ã–≤–æ–≤
def db_review_insert(id_user:int, text_review: str, looked_status: int, date:str):
    cursor.execute('INSERT INTO Reviews (id_user, text_review, lookeed_status, date) VALUES (?, ?, ?, ?)', (id_user, text_review, looked_status, date))
    conn.commit()

#–ü–æ–∏—Å–∫ –æ—Ç–∑—ã–≤–æ–≤
def db_review_select():
    cursor.execute('SELECT * FROM Reviews WHERE lookeed_status = 0 ')
    rows = cursor.fetchall()
    return rows

#–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤
def db_review_update(id_review: int):
    cursor.execute('UPDATE Reviews SET lookeed_status = 1 WHERE id_review = ?',(id_review,))
    conn.commit()



#–í–°–ï –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–´ –° –ó–ê–ü–†–û–°–ê–ú–ò

#–í—ã–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è
def db_requests_count():
    cursor.execute('SELECT requests, COUNT (*) AS Count FROM Requests GROUP BY requests')
    rows = cursor.fetchall()
    return rows

#–í–Ω–µ—Å–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É —Å –∑–∞–ø—Ä–æ—Å–∞–º–∏
def db_requests_insert(id_user: int, requests: str, date: str):
	cursor.execute('INSERT INTO Requests (id_user, requests, date) VALUES (?, ?, ?)', (id_user, requests, date))
	conn.commit()

#–í—ã–≤–æ–¥ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –¥–∞—Ç–µ
def db_requests_select_date(selected_date:str):
    query = 'SELECT requests, COUNT (*) AS Count FROM Requests WHERE date LIKE ' + selected_date + ' GROUP BY requests'
    cursor.execute(query)
    rows = cursor.fetchall()
    return rows

#–í—ã–≤–æ–¥ –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥
def db_request_select_date_between(start_date:str, final_date:str):
    query = "SELECT requests, COUNT (*) AS Count FROM Requests WHERE date BETWEEN " + start_date + " AND " + final_date + " GROUP BY requests"
    cursor.execute(query)
    rows = cursor.fetchall()
    return rows



#–í–°–ï –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–´ –° –°–û–ë–´–¢–ò–Ø–ú–ò

#–í—Å–µ —Ç–∏–ø—ã —Å–æ–±—ã—Ç–∏–π
def db_types_events():
    cursor.execute("SELECT Name_event FROM Type_event")
    rows = cursor.fetchall()
    return rows

#–í—Å—Ç–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è
def db_event_insert(dtype_event: int, ddate_event: str, dtext_event: str, ddate_event_techical: str):
    cursor.execute("INSERT INTO Events (Text_event, Date_event, Date_event_technical ,Event_type) VALUES (?, ?, ?, ?)", (dtext_event, ddate_event, ddate_event_techical ,dtype_event))
    conn.commit()
    
#–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–±—ã—Ç–∏—è 
def db_event_select_last(type_event: str):
    cursor.execute("SELECT * FROM Events LEFT OUTER JOIN Type_event ON Events.Event_type = Type_event.Id_event WHERE Event_type = ? ORDER BY Id_event DESC LIMIT 1", (type_event,))
    rows = cursor.fetchone()
    return rows



#–í–°–ï –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–´ –° –ü–ï–°–ù–Ø–ú–ò

#–ü–æ–∏—Å–∫ –ø–µ—Å–Ω–∏
def db_song_select():
    cursor.execute('SELECT * FROM songs')
    rows = cursor.fetchall()
    return rows



#–í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò

#–í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏
def error(message):
    try:
        time.sleep(0.5)
        bot.send_photo(message.chat.id, cotik)
        time.sleep(0.5)
        bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.\n–û –¥–∞–Ω–Ω–æ–π –æ—à–∏–±–∫–µ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –æ—Ç–∑—ã–≤–∞—Ö –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–∞–º–æ–º—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ !)")
        administrator_call(message)
    except:
        bot.send_message(message.chat.id, "–í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        administrator_call(message)
        bot.send_photo(message.chat.id, cotik)

#–í—Å–µ –ø–µ—Å–µ–Ω–Ω–∏–∫–∏
def db_all_song_book():
    cursor.execute("SELECT * FROM Song_book")
    rows = cursor.fetchall()
    return rows

#–ü–µ—Å–µ–Ω–Ω–∏–∫ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É
def db_song_book_by_title(message, song_book_title):
    cursor.execute("SELECT file_path FROM Song_book WHERE title_book = ?", (song_book_title,))
    rows = cursor.fetchone()
    file = open (rows[0], 'rb')
    bot.send_message(message.chat.id, "–ó–∞–≥—Ä—É–∂–∞—é...")
    bot.send_document(message.chat.id, file)

#–ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –ú–∞—à–∏
def get_img_from_Masha(message):

    start_time = time.time() 

    bot.send_message(message.chat.id, '–§–æ—Ä–º–∏—Ä—É—é —Å–ø–∏—Å–∫–∏\n[////                ]')
    time.sleep(1.5)
    

    image_shalame_list = []
    image_depp_list = []
    line_list = []

    used_links = open("files/used_links.txt", "a")
    used_links2 = open("files/used_links.txt", "r").read().split('\n')

    urlsite = 'https://www.theplace.ru'
    count = 0

    #–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—Å—ã–ª–∫–∞–º–∏ –∏–∑ —Ñ–∞–π–ª–∞
    for line in used_links2:
        line_list.append(line)

    bot.edit_message_text ('–°–æ–±–∏—Ä–∞—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n[//////              ]', chat_id=message.chat.id, message_id=message.message_id + 1)
    time.sleep(1)

    #–®–∞–ª–∞–º–µ
    for p in range(1,3):

        url = 'https://www.theplace.ru/photos/timothee_chalamet/?page='+str(p)
        r = requests.get(url)
        soup = BeautifulSoup(r.text, 'lxml')
        images = soup.findAll('div', class_='p-1')

        for image in images:
            link = image.find('a').get('href')
            r2 = requests.get(urlsite + link)
            soup2 = BeautifulSoup(r2.text, 'lxml')
            link2 = soup2.find('img', class_ = 'pic big_pic').get('src')
            image_shalame_list.append(urlsite + link2)
            count = count + 1
            bot.edit_message_text ('–°–æ–±—Ä–∞–Ω–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: ' + str(count) + '\n[/////////           ]', chat_id=message.chat.id, message_id=message.message_id + 1)

    #–î–∂–æ–Ω–Ω–∏
    for p in range(1,3):

        url = 'https://www.theplace.ru/photos/johnny_depp/?page='+str(p)
        r = requests.get(url)
        soup = BeautifulSoup(r.text, 'lxml')
        images = soup.findAll('div', class_='col-6 col-sm-6 col-md-6 col-lg-4 col-xl-3 pb-3')
        for image in images:
            link = image.find('a', class_='photos-pic-card__link').get('href')
            r2 = requests.get(urlsite+link)
            soup2 = BeautifulSoup(r2.text, 'lxml')
            link2 = soup2.find('img', class_='pic big_pic').get('src')
            image_depp_list.append(urlsite+link2)
            count = count + 1
            bot.edit_message_text ('–°–æ–±—Ä–∞–Ω–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: ' + str(count) + '\n[/////////////       ]', chat_id=message.chat.id, message_id=message.message_id + 1)

    bot.edit_message_text ('–í—ã–±–∏—Ä–∞—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é\n[////////////////    ]', chat_id=message.chat.id, message_id=message.message_id + 1)
    image_list = image_depp_list + image_shalame_list        
    image_list = list(set(image_list) - set(line_list))

    if len(image_list):
        time.sleep(1.5)
        bot.edit_message_text ('–ó–∞–≥—Ä—É–∂–∞—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é\n[//////////////////  ]', chat_id = message.chat.id, message_id=message.message_id + 1)
        time.sleep(1.5)
        random.shuffle(image_list)
        img_url = random.choice(image_list)
        used_links.write(img_url + '\n')
        bot.edit_message_text ('–ó–∞–≥—Ä—É–∂–µ–Ω–æ\n[////////////////////]', chat_id = message.chat.id, message_id=message.message_id + 1)
        time.sleep(1.5)
        end_time = time.time()-start_time 
        bot.edit_message_text ('–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ' + str(end_time), chat_id = message.chat.id, message_id=message.message_id + 1)
        return img_url
    else:
        bot.send_message(message.chat.id, '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å. ')
    